{ "lessons": [
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.399Z",
        "description": "We'll write and execute our first JSP file.",
        "objectId": "NirUozU69A",
        "permalinkName": "Hello-JSP",
        "slNo": 1,
        "title": "Hello JSP",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.880Z",
        "youtube": " WCbwBHXUx0k"
    },
	{
        "course": "servlets_intro",
        "createdAt": "2014-11-26T17:01:52.647Z",
        "description": "In this tutorial, we'll understand how our servlet intercepts HTTP requests, and the methods it runs.",
        "objectId": "oovf1CNSdE",
        "permalinkName": "Understanding-the-Servlet",
        "slNo": 4,
        "title": "Understanding the Servlet",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.365Z",
        "youtube": " YxuCG0f14hM"
    },
	{
        "course": "servlets_intro",
        "createdAt": "2014-11-26T17:01:52.598Z",
        "description": "In this tutorial, we'll set up and configure Eclipse and Tomcat in our development environment.",
        "objectId": "uSTu5Ge8Cu",
        "permalinkName": "Setting-up",
        "slNo": 1,
        "title": "Setting up",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.425Z",
        "youtube": " b42CJ0r-1to"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.233Z",
        "description": "We'll learn about named queries and how to write and access named queries. We'll also write and execute a NamedNativeQuery.",
        "objectId": "Td3ODHaoVC",
        "permalinkName": "Named-Queries",
        "slNo": 8,
        "title": "Named Queries",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:46:10.791Z",
        "youtube": " o_P-p2b_k6w"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.984Z",
        "description": "One To Many mapping of entities.",
        "objectId": "fAsMkLDiMV",
        "permalinkName": "One-To-Many-Mapping",
        "slNo": 16,
        "title": "One To Many Mapping",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:37:23.174Z",
        "youtube": " 4mANZ4MMbD4"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.559Z",
        "description": "We'll make a couple of changes to the sample web service we've been developing all along. First, we will see what happens when a custom Java data type needs to be exchanged as a part of a web service operation. Then, we'll create a web service endpoint interface that our class implements.",
        "objectId": "OF7TjlQXGC",
        "permalinkName": "Service-Interface-and-Custom-Types",
        "slNo": 13,
        "title": "Service Interface and Custom Types",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T04:40:51.575Z",
        "youtube": " QFq4Ue_jExY"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.494Z",
        "description": "In this first part of the tutorial, we'll create a Spring project that forms the basis for our Aspect. This is a good refresher of some of the core Spring concepts, and it also give us an opportunity to introduce a service layer in our code that we'll build on in the subsequent tutorials.",
        "objectId": "Nz7ICPyAdw",
        "permalinkName": "Writing-Our-First-Aspect-Part-1",
        "slNo": 3,
        "title": "Writing Our First Aspect Part 1",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.892Z",
        "youtube": " D0ekfQNGgpY"
    },
	{
        "course": "spring_data",
        "createdAt": "2014-11-26T17:01:53.517Z",
        "description": "We'll wrap up discussion on the Spring JDBC support by using the DAO support classes that Spring provides out of the box. We'll see how this makes our DAO classes cleaner than ever.",
        "objectId": "W6WVPX4MRF",
        "permalinkName": "DAO-Support-Classes",
        "slNo": 9,
        "title": "DAO Support Classes",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.044Z",
        "youtube": " UOyjFjilPIo"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.157Z",
        "description": "We'll understand some of the different ways in which entity objects change from one state to another.",
        "objectId": "Yrr2tmDhFL",
        "permalinkName": "Understanding-State-Changes",
        "slNo": 3,
        "title": "Understanding State Changes",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.041Z",
        "youtube": " sjZGFHEdD4M"
    },
	{
        "course": "spring_data",
        "createdAt": "2014-11-26T17:01:53.519Z",
        "description": "In this video, we'll learn how to integrate the Hibernate framework in our Spring application. We'll create a SessionFactory as a Spring singleton and use that in our DAO class to work with the database.",
        "objectId": "ZzFHPiI0l7",
        "permalinkName": "Using-Hibernate-with-Spring",
        "slNo": 10,
        "title": "Using Hibernate with Spring",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.040Z",
        "youtube": " 0lqlg5tnDag"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.533Z",
        "description": "In this video, we'll learn how to implement a very common use case: basic login functionality using Struts 2 framework. In the next tutorial, we'll enhance this code with some best practices.",
        "objectId": "b0fogiVnzu",
        "permalinkName": "Login-Action-and-Best-Practices",
        "slNo": 11,
        "title": "Login Action and Best Practices",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:48:30.255Z",
        "youtube": " Oo9lMGfis1c"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.487Z",
        "description": "We'll learn and implement three JSR-250 annotations that Spring supports:Resource, PostConstruct and PreDestroy.",
        "objectId": "bTHsCtTQWV",
        "permalinkName": "Some-JSR-250-Annotations",
        "slNo": 20,
        "title": "Some JSR-250 Annotations",
        "unitNumber": 3,
        "updatedAt": "2014-12-04T05:55:06.097Z",
        "youtube": " apTEbKPW3ow"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.520Z",
        "description": "In this video, we'll learn about the MVC architectural pattern. We'll learn what the Model, View and Controller roles are with a real world example.",
        "objectId": "c8JEk6HXvg",
        "permalinkName": "Introduction-To-MVC",
        "slNo": 1,
        "title": "Introduction To MVC",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.094Z",
        "youtube": " f46WEeM8HTA"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.481Z",
        "description": "In this tutorial, we'll learn about and write our own BeanFactoryPostProcessor. We'll also try out a handy BeanFactoryPostProcessor that comes with Spring: the PropertyPlaceholderConfigurer.",
        "objectId": "agVUigz5EF",
        "permalinkName": "Writing-a-BeanFactoryPostProcessor",
        "slNo": 16,
        "title": "Writing a BeanFactoryPostProcessor",
        "unitNumber": 2,
        "updatedAt": "2014-12-04T05:55:06.097Z",
        "youtube": " szNWTBlewQI"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.528Z",
        "description": "In this tutorial, we'll quickly recap the concepts we've learnt so far by creating a new Struts 2 application. We'll then add an sample business service, and take our first look at Struts 2 tags, starting with s:property tag.",
        "objectId": "fLhtg76efA",
        "permalinkName": "A-Tag-And-A-Business-Service",
        "slNo": 7,
        "title": "A Tag And A Business Service",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:48:22.599Z",
        "youtube": " nrYLnbGZ_4E"
    },
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.454Z",
        "description": "We'll look at the implicit objects in JSP that provide scoped objects. We'll also look at the PageContext object and how to use it.",
        "objectId": "lvyLg16uGm",
        "permalinkName": "Scopes-in-JSP-and-the-PageContext-object",
        "slNo": 4,
        "title": "Scopes in JSP and the PageContext object",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.255Z",
        "youtube": " W0JQ0TaeXAY"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.568Z",
        "description": "There is an alternative way of publishing and running web services without having to use any app servers. In this tutorial, we'll use the Endpoint class to publish our web service.",
        "objectId": "xej15Gxpem",
        "permalinkName": "Using-Endpoint",
        "slNo": 19,
        "title": "Using Endpoint",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T04:41:17.662Z",
        "youtube": " ExGgevg3i94"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.558Z",
        "description": "In this tutorial, we'll understand how types are handled in the WSDL. We'll also explore the two styles we can choose from for our WSDL - Document style and RPC style.",
        "objectId": "q80QyP4cvB",
        "permalinkName": "Schema-Types-and-Binding-Styles",
        "slNo": 12,
        "title": "Schema Types and Binding Styles",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T04:40:49.771Z",
        "youtube": " rHJ1v1jsAao"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.556Z",
        "description": "Now it's time to understand what's going on in the WSDL. We'll simplify our web service code to just one method, generate the WSDL for it and  understand the different elements that are generated.",
        "objectId": "zifOGfVnyx",
        "permalinkName": "Understanding-the-WSDL",
        "slNo": 10,
        "title": "Understanding the WSDL",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T04:40:48.160Z",
        "youtube": " E76xW1JTVXY"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.554Z",
        "description": "We'll add an operation to our web service that takes input arguments to achieve both sending and receiving data from the web service.",
        "objectId": "vwtO8dGjbL",
        "permalinkName": "Adding-Input-Arguments",
        "slNo": 8,
        "title": "Adding Input Arguments",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T04:38:59.509Z",
        "youtube": " HLzM92ZnisY"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.548Z",
        "description": "In this tutorial, we'll use the stubs generated by wsimport and implement a client application. Our IPServiceLocator program takes IP address as an input argument and makes a call to the web service to display the country name to the console.",
        "objectId": "ojkSguc0s0",
        "permalinkName": "Writing-a-Web-service-Client---Calling-the-Service",
        "slNo": 4,
        "title": "Writing a Web service Client - Calling the Service",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.324Z",
        "youtube": " KFlDdb65w3U"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.544Z",
        "description": "In this tutorial, we'll learn what the Struts 2 interceptor class contains. We'll understand how the flow of control is achieved, and how the framework makes the flexible 'plug-anywhere' configuration of interceptors possible.",
        "objectId": "qwOdY337OD",
        "permalinkName": "Anatomy-of-an-Interceptor",
        "slNo": 19,
        "title": "Anatomy of an Interceptor",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:48:39.290Z",
        "youtube": " qefvF2Y0A8Y"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.525Z",
        "description": "In the second part of this two part video, we'll continue with our Struts 2 application by adding result mapping to JSPs, Struts 2 filters| and complete the request response flow.",
        "objectId": "tnRlU4ItFo",
        "permalinkName": "Writing-a-Struts-2-Application-Part-2",
        "slNo": 5,
        "title": "Writing a Struts 2 Application Part 2",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.425Z",
        "youtube": " 1rDnWURZOWI"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.485Z",
        "description": "In this tutorial, we'll use the Autowired annotation to wire up dependencies. We'll learn how to add dependencies by type and name. We'll also use Qualifiers to narrow down dependency contenders.",
        "objectId": "wX79xnYBIK",
        "permalinkName": "The-Autowired-Annotation",
        "slNo": 19,
        "title": "The Autowired Annotation",
        "unitNumber": 3,
        "updatedAt": "2014-12-04T05:55:06.482Z",
        "youtube": " IVIhVJJGo68"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.479Z",
        "description": "We'll use two different ways to run methods on initialization and destruction of beans.",
        "objectId": "vq3SWfLvjQ",
        "permalinkName": "Lifecycle-Callbacks",
        "slNo": 14,
        "title": "Lifecycle Callbacks",
        "unitNumber": 2,
        "updatedAt": "2014-12-04T05:55:06.476Z",
        "youtube": " 8LCpo4sfdQU"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.453Z",
        "description": "In this tutorial, we'll write code to implement the BeanFactory concept that we learnt in our previous tutorial. We'll write a Spring XML to configure a Spring bean. Then we'll use the BeanFactory to instantiate our bean in the Spring container.",
        "objectId": "r6zMhVmpIA",
        "permalinkName": "Writing-Code-Using-the-Bean-Factory",
        "slNo": 4,
        "title": "Writing Code Using the Bean Factory",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.391Z",
        "youtube": " 7c6ZTF6cF88"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.451Z",
        "description": "In this tutorial, we'll discuss the role of Spring as a bean container. We'll also have a quick discussion on the Factory pattern, and I'll introduce you to the Spring Bean Factory object.",
        "objectId": "ywlIR3IWGS",
        "permalinkName": "Understanding-Spring-Bean-Factory",
        "slNo": 3,
        "title": "Understanding Spring Bean Factory",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.527Z",
        "youtube": " xlWwMSu5I70"
    },
	{
        "course": "maven_intro",
        "createdAt": "2014-11-26T17:01:53.445Z",
        "description": "In this tutorial, we'll add the Maven compiler plugin configuration to the pom.xml.",
        "objectId": "wg3eZHBez8",
        "permalinkName": "Introduction-to-Plugins-with-the-Maven-Compiler-Plugin",
        "slNo": 7,
        "title": "Introduction to Plugins with the Maven Compiler Plugin",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.504Z",
        "youtube": " OQLBcd8QrWk"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.969Z",
        "description": "One to one mapping of entities.",
        "objectId": "nta9gOCswV",
        "permalinkName": "One-To-One-Mapping",
        "slNo": 15,
        "title": "One To One Mapping",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:37:22.313Z",
        "youtube": " Of7qR-WagYk"
    },
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.508Z",
        "description": "We now set out to write our own MVC application from the scratch.",
        "objectId": "oZ1ZsJ67AO",
        "permalinkName": "Writing-an-MVC-Application-Part-1",
        "slNo": 7,
        "title": "Writing an MVC Application Part 1",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.320Z",
        "youtube": " QOUIVsBN82Q"
    },
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.493Z",
        "description": "Introduction and explanation of the Model-View-Controller pattern.",
        "objectId": "pd2rG7ECXx",
        "permalinkName": "Understanding-the-MVC-Pattern",
        "slNo": 6,
        "title": "Understanding the MVC Pattern",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.370Z",
        "youtube": " zk_zEp-mtvQ"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.175Z",
        "description": "This tutorial explores a special case of object state change: from detached to persistent.",
        "objectId": "3a4SVOBx1m",
        "permalinkName": "Persisting-Detached-Objects",
        "slNo": 4,
        "title": "Persisting Detached Objects",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.587Z",
        "youtube": " T02FicxK_aY"
    },
	{
        "course": "servlets_intro",
        "createdAt": "2014-11-26T17:01:52.679Z",
        "description": "Now we'll understand how to intercept GET and POST requests using the `doGet` and the `doPost` methods. We also look at how parameters are passed in HTTP requests.",
        "objectId": "0QojTZQHQb",
        "permalinkName": "The-POST-Method-and-Passing-Parameters",
        "slNo": 6,
        "title": "The POST Method and Passing Parameters",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.594Z",
        "youtube": " MnUJl3NYRRc"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.506Z",
        "description": "In this video, we go where no Spring AOP tutorial has gone before! We'll understand how Spring AOP works and how it uses proxy classes to apply advice. And we'll do this by implementing our own simple factory service. The way Spring AOP works is much more complicated, but this simple implementation should give us a solid understanding of proxy objects and clarify the core concepts.",
        "objectId": "0NGikJjesI",
        "permalinkName": "Understanding-AOP-Proxies",
        "slNo": 12,
        "title": "Understanding AOP Proxies",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.593Z",
        "youtube": " yiinKulgm4U"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.331Z",
        "description": "In this tutorial, we'll learn how to cache results that are fetched from the Query object.",
        "objectId": "0j9Z5J7J2W",
        "permalinkName": "Using-Query-Cache",
        "slNo": 14,
        "title": "Using Query Cache",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:46:15.591Z",
        "youtube": " iwCdyr0bdkw"
    },
	{
        "course": "spring_data",
        "createdAt": "2014-11-26T17:01:53.511Z",
        "description": "We'll use the JdbcTemplate class provided by Spring to implement a DAO method. We'll see how using the template class makes the DAO methods simple, and how it takes care of much of the boilerplate code we'd have to write otherwise.",
        "objectId": "0yqPwjeczi",
        "permalinkName": "Using-JdbcTemplate",
        "slNo": 4,
        "title": "Using JdbcTemplate",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.590Z",
        "youtube": " 0LYqy0wvS20"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.475Z",
        "description": "This tutorial covers the concepts of Bean Scopes in Spring. We'll understand when beans are created and how to configure different scopes for the beans.",
        "objectId": "099VOXZLI8",
        "permalinkName": "Understanding-Bean-Scopes",
        "slNo": 11,
        "title": "Understanding Bean Scopes",
        "unitDescription": "Scopes and Lifecycles",
        "unitNumber": 2,
        "updatedAt": "2014-12-04T05:55:05.576Z",
        "youtube": " NnNvDknQJt0"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.489Z",
        "description": "In this tutorial, we'll use the MessageSource interface to retrieve messages out of property files.",
        "objectId": "29EbcX2gCl",
        "permalinkName": "Using-MessageSource-To-Get-Text-From-Property-Files",
        "slNo": 22,
        "title": "Using MessageSource To Get Text From Property Files",
        "unitNumber": 3,
        "updatedAt": "2014-12-04T05:55:05.594Z",
        "youtube": " cUqquQDZR-c"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.546Z",
        "description": "Let us understand few of the most important concepts and terminologies used in web service technology.",
        "objectId": "3dvIiD5rKP",
        "permalinkName": "Web-Service-Jargon",
        "slNo": 2,
        "title": "Web Service Jargon",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.589Z",
        "youtube": " C53G6R5EVys"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.455Z",
        "description": "We'll now use constructors to set the member variable values for our Spring beans. We'll also look at some techniques to resolve conflicts in the case of overloaded constructors.",
        "objectId": "5BMr9WTB7L",
        "permalinkName": "Using-Constructor-Injection",
        "slNo": 6,
        "title": "Using Constructor Injection",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.681Z",
        "youtube": " IOZzxmJVus0"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.810Z",
        "description": "We'll learn how to instantiate Entity objects and save them to the database using Hibernate APIs.",
        "objectId": "6EniJLCvxN",
        "permalinkName": "Saving-Objects-using-Hibernate-APIs",
        "slNo": 5,
        "title": "Saving Objects using Hibernate APIs",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.669Z",
        "youtube": " FFMOZY4z6bE"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.535Z",
        "description": "We'll now learn how to use wildcards when mapping Struts 2 Actions. Wildcards let us map multiple Action names with a single Action mapping. This simplifies the XML mapping configuration, especially if your application uses some sort of standard naming conventions for the Action and JSP names.",
        "objectId": "4fpSYA5Vzs",
        "permalinkName": "Action-Wildcards",
        "slNo": 13,
        "title": "Action Wildcards",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:48:32.635Z",
        "youtube": " gBhGREQyeFk"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.540Z",
        "description": "In this tutorial, we'll learn a few techniques for using model objects in Struts 2 actions. We'll also learn about the ModelDriven interface.",
        "objectId": "5HDYXs4kNm",
        "permalinkName": "Using-Model-Objects",
        "slNo": 16,
        "title": "Using Model Objects",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:48:36.167Z",
        "youtube": " ATLP7ZimjVU"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.502Z",
        "description": "This tutorial covers the Around advice type. We'll learn how to use it, and we'll also look at some of the unique and powerful features that are specific to this advice type.",
        "objectId": "4cHxaeix3j",
        "permalinkName": "Around-Advice-Type",
        "slNo": 9,
        "title": "Around Advice Type",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.673Z",
        "youtube": " jwRwHOIwwdQ"
    },
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.569Z",
        "description": "We'll learn what is JSTL and why it is used. We'll also use the useBean tag.",
        "objectId": "3yuPujKggp",
        "permalinkName": "Introduction-to-JSTL-and-the-useBean-tag",
        "slNo": 11,
        "title": "Introduction to JSTL and the useBean tag",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.672Z",
        "youtube": " -mjYAf0ILZs"
    },
	{
        "course": "maven_intro",
        "createdAt": "2014-11-26T17:01:53.413Z",
        "description": "In this tutorial we'll learn about dependencies by adding one. We'll write code to use the slf4j logging framework, and we'll modify our pom.xml to specify the dependency to Maven.",
        "objectId": "6rmdxF7Qwm",
        "permalinkName": "Adding-a-Dependency",
        "slNo": 5,
        "title": "Adding a Dependency",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.674Z",
        "youtube": " IRKu8_l5YiQ"
    },
	{
        "course": "servlets_intro",
        "createdAt": "2014-11-26T17:01:52.664Z",
        "description": "In this tutorial, we'll learn how to configure our servlets using XML instead of annotations.",
        "objectId": "4hDvjSO2UJ",
        "permalinkName": "Servlet-XML-Configuration",
        "slNo": 5,
        "title": "Servlet XML Configuration",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.679Z",
        "youtube": " w6YPK9xunCk"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.218Z",
        "description": "We'll understand how appending parameters to SQL queries causes SQL injection, and will learn how to use the Parameter Binding feature in Hibernate.",
        "objectId": "9nNkUKUA1C",
        "permalinkName": "Understanding-Parameter-Binding-and-SQL-Injection",
        "slNo": 7,
        "title": "Understanding Parameter Binding and SQL Injection",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:46:10.319Z",
        "youtube": " PiahhQ0Qkak"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.500Z",
        "description": "We'll now learn about join points, and how we can use arguments in the advice methods to get information about join points.",
        "objectId": "Bi41VcMhZg",
        "permalinkName": "JoinPoints-and-Advice-Arguments",
        "slNo": 7,
        "title": "JoinPoints and Advice Arguments",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.730Z",
        "youtube": " nrAN0E_A7fc"
    },
	{
        "course": "maven_intro",
        "createdAt": "2014-11-26T17:01:53.446Z",
        "description": "There are some Maven plugins that are full Servlet containers. We'll look at an example: the Jetty plugin, and we'll see how it makes developing web applications easier.",
        "objectId": "8gMr5fUOjm",
        "permalinkName": "Using-the-Jetty-Plugin",
        "slNo": 8,
        "title": "Using the Jetty Plugin",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.729Z",
        "youtube": " 6sIhJuaZhF0"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.272Z",
        "description": "Understanding how to apply restrictions to our queries when using Criteria.",
        "objectId": "9JzjrMcatj",
        "permalinkName": "Understanding-Restrictions",
        "slNo": 10,
        "title": "Understanding Restrictions",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:46:11.811Z",
        "youtube": " MzrzsKSJBt0"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.534Z",
        "description": "We'll continue looking at the login action and learn about some best practices that we can implement in our Struts 2 application.",
        "objectId": "73qMXon3za",
        "permalinkName": "Login-Action-and-Best-Practices-Part-2",
        "slNo": 12,
        "title": "Login Action and Best Practices Part 2",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:48:31.278Z",
        "youtube": " 7yYs39-ZDOE"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.450Z",
        "description": "In this tutorial, we'll learn how to set up our Eclipse development environment to write Spring code.",
        "objectId": "CLKTwF0MQz",
        "permalinkName": "Setting-Up",
        "slNo": 2,
        "title": "Setting Up",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.731Z",
        "youtube": " Z5gubdHLJIc"
    },
	{
        "course": "maven_intro",
        "createdAt": "2014-11-26T17:01:53.384Z",
        "description": "We'll now understand what happens when we run the archetype:generate command and how that affects the pom.xml.",
        "objectId": "9xmqkghhPN",
        "permalinkName": "Understanding-Archetypes-and-pom.xml",
        "slNo": 3,
        "title": "Understanding Archetypes and pom.xml",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.723Z",
        "youtube": " AI8Kjag1vGk"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.480Z",
        "description": "In this tutorial, we'll understand what a BeanPostProcessor is. We'll also write a BeanPostProcessor that prints a message upon initializing each and every bean in the Spring XML.",
        "objectId": "927YS7etP6",
        "permalinkName": "Writing-a-BeanPostProcessor",
        "slNo": 15,
        "title": "Writing a BeanPostProcessor",
        "unitNumber": 2,
        "updatedAt": "2014-12-04T05:55:05.731Z",
        "youtube": " ycOZTpMkow"
    },
	{
        "course": "maven_intro",
        "createdAt": "2014-11-26T17:01:53.448Z",
        "description": "More plugins! We'll use the Maven's Eclipse plugin to get our Maven project into the Eclipse IDE. We'll also download and install the m2eclipse plugin of Eclipse to bring Maven functionality into the Eclipse GUI.",
        "objectId": "FvsMGXgFfC",
        "permalinkName": "Eclipse-Plugin-for-Maven-and-Maven-Plugin-for-Eclipse",
        "slNo": 9,
        "title": "Eclipse Plugin for Maven and Maven Plugin for Eclipse",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.783Z",
        "youtube": " xE2F4Z_wKCU"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.477Z",
        "description": "We'll provide our beans with access to the ApplicationContext object by implementing the ApplicationContextAware interface. We'll also use BeanNameAware interface to get the name of the bean configured in the Spring XML.",
        "objectId": "F5dLDerCWr",
        "permalinkName": "Using-ApplicationContextAware",
        "slNo": 12,
        "title": "Using ApplicationContextAware",
        "unitNumber": 2,
        "updatedAt": "2014-12-04T05:55:05.779Z",
        "youtube": " WUqyoH_G4Ko"
    },
	{
        "course": "servlets_intro",
        "createdAt": "2014-11-26T17:01:52.617Z",
        "description": "Using Eclipse wizards to create a Dynamic Web Project.",
        "objectId": "GVNjX9uWyH",
        "permalinkName": "First-Servlet-Part-1",
        "slNo": 2,
        "title": "First Servlet Part 1",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.776Z",
        "youtube": " oX2rw5pAdxw"
    },
	{
        "course": "spring_data",
        "createdAt": "2014-11-26T17:01:53.509Z",
        "description": "We'll now implement a simple DAO class that fetches data from the database using JDBC. We'll look at all the boilerplate code we need to write to establish connections, execute queries, close objects and handle exceptions.",
        "objectId": "FbzmRUg6IT",
        "permalinkName": "Using-JDBC-without-Spring",
        "slNo": 2,
        "title": "Using JDBC without Spring",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.775Z",
        "youtube": " B3gEbC37DAM"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.203Z",
        "description": "In this tutorial we'll learn Hibernate's support for pagination. We'll also learn how to write select queries to retrieve only certain columns.",
        "objectId": "ERavNAcpOT",
        "permalinkName": "Select-and-Pagination-in-HQL",
        "slNo": 6,
        "title": "Select and Pagination in HQL",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:46:09.856Z",
        "youtube": " WVHFpp8X5z0"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.497Z",
        "description": "We'll now learn what a Pointcut is, the Pointcut annotation and how to apply advice to multiple pointcuts.",
        "objectId": "GeICg8TSwd",
        "permalinkName": "Pointcuts-and-Wildcard-Expressions",
        "slNo": 5,
        "title": "Pointcuts and Wildcard Expressions",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.781Z",
        "youtube": " h7IdaLybg9A"
    },
	{
        "course": "spring_data",
        "createdAt": "2014-11-26T17:01:53.510Z",
        "description": "We'll now add the Spring framework to our JDBC project. We'll add dependency injection to our Main and DAO class. We'll also learn how to configure DataSource as a Spring bean and supply connection parameters to it in the XML file.",
        "objectId": "Cx83qjiDJe",
        "permalinkName": "Adding-Spring-and-DataSource-Configuration",
        "slNo": 3,
        "title": "Adding Spring and DataSource Configuration",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.782Z",
        "youtube": " f-k823MZ02Q"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.493Z",
        "description": "In this tutorial, we'll add the additional dependencies required for Spring AOP and we'll configure our project's class path with these dependencies.",
        "objectId": "GD7MjbfVaN",
        "permalinkName": "Setting-Up-AOP-Dependencies",
        "slNo": 2,
        "title": "Setting Up AOP Dependencies",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.783Z",
        "youtube": " 4P0TME-AbSw"
    },
	{
        "course": "spring_data",
        "createdAt": "2014-11-26T17:01:53.513Z",
        "description": "We returned an integer datatype result from our query in the previous tutorial. In this tutorial, we'll learn how to return other datatypes. We'll implement a method that returns a String query output.",
        "objectId": "CO8GcYcOlI",
        "permalinkName": "Returning-Other-Datatypes-from-JdbcTemplate",
        "slNo": 5,
        "title": "Returning Other Datatypes from JdbcTemplate",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.788Z",
        "youtube": " QrU6UI_bSbU"
    },
	{
        "course": "spring_data",
        "createdAt": "2014-11-26T17:01:53.508Z",
        "description": "This tutorial serves as an introduction to Spring Data support. We'll also install a lightweight database Apache Derby that we'll use in subsequent tutorials. We'll learn how to start Derby in Network server mode, and how to connect and run SQL queries using the ij client tool.",
        "objectId": "IZ97jOaRQU",
        "permalinkName": "Introduction-to-Spring-Data-and-Setting-Up",
        "slNo": 1,
        "title": "Introduction to Spring Data and Setting Up",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.833Z",
        "youtube": " eR_JFtqyNL4"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.854Z",
        "description": "We'll look at one of the several ways we can fetch data from the database using Hibernate: the `session.get` method.",
        "objectId": "HAj2mwLYAd",
        "permalinkName": "Retrieving-Objects-using-session.get",
        "slNo": 8,
        "title": "Retrieving Objects using session.get",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:36:17.665Z",
        "youtube": " 3FV1yv7fvDQ"
    },
	{
        "course": "spring_data",
        "createdAt": "2014-11-26T17:01:53.514Z",
        "description": "In this tutorial, we implement a custom RowMapper class to map our domain objects. We then use this class to write fetch methods that return custom model objects.",
        "objectId": "JFwHCH3p41",
        "permalinkName": "Implementing-RowMapper",
        "slNo": 6,
        "title": "Implementing RowMapper",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.831Z",
        "youtube": " i-_CUlER3z8"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.562Z",
        "description": "In this tutorial we'll understand how an XML binding framework like JAXB works to help convert our object instances to XML.",
        "objectId": "IOxSSVEKqX",
        "permalinkName": "Using-JAXB-Annotations-Part-1",
        "slNo": 14,
        "title": "Using JAXB Annotations Part 1",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T04:41:12.720Z",
        "youtube": " wireYD00xkw"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.954Z",
        "description": "Hibernate manages data fetching and optimizations using proxy objects. In this tutorial, we'll learn what they are and how lazy initialization works.",
        "objectId": "H9M46pr1Nk",
        "permalinkName": "Proxy-Objects-and-Eager-and-Lazy-Fetch-Types",
        "slNo": 14,
        "title": "Proxy Objects and Eager and Lazy Fetch Types",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:37:21.522Z",
        "youtube": " RmnrgocuivQ"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.523Z",
        "description": "In this tutorial, we'll set up our development environment to use Struts 2. We'll download the Struts 2 distribution, configure a user library and create a blank web application.",
        "objectId": "Izo1xB7Bq2",
        "permalinkName": "Setting-Up",
        "slNo": 3,
        "title": "Setting Up",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.835Z",
        "youtube": " LhjEgxJ080g"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.492Z",
        "description": "This video provides a brief introduction to Aspect Oriented Programming concepts.",
        "objectId": "HoE7ADCBJF",
        "permalinkName": "Introduction-to-AOP",
        "slNo": 1,
        "title": "Introduction to AOP",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.833Z",
        "youtube": " QdyLsX0nG30"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.496Z",
        "description": "Now that we have a basic Spring application, we'll implement the Logging aspect. We'll learn how to create a new Aspect using annotations and configure an advice to run before a getter method.",
        "objectId": "JgBXk6WTby",
        "permalinkName": "Writing-Our-First-Aspect-Part-2",
        "slNo": 4,
        "title": "Writing Our First Aspect Part 2",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.830Z",
        "youtube": " 4-z-YsRfSF0"
    },
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.421Z",
        "description": "We'll understand what the JSP file is and how it gets converted to a servlet.",
        "objectId": "LxnYionAxy",
        "permalinkName": "Understanding-the-JSP",
        "slNo": 2,
        "title": "Understanding the JSP",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.885Z",
        "youtube": " Ycf_GQbPqKI"
    },
	{
        "course": "servlets_intro",
        "createdAt": "2014-11-26T17:01:52.632Z",
        "description": "Creating and running our first Servlet.",
        "objectId": "KR5XjJZ0Vq",
        "permalinkName": "First-Servlet-Part-2",
        "slNo": 3,
        "title": "First Servlet Part 2",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.903Z",
        "youtube": " gU0RebsaFzQ"
    },
	{
        "course": "servlets_intro",
        "createdAt": "2014-11-26T17:01:52.722Z",
        "description": "This two part tutorial introduces scopes and the Request, Session and Context objects.",
        "objectId": "N7BXxFc4Xg",
        "permalinkName": "Request,-Session-and-Context",
        "slNo": 9,
        "title": "Request, Session and Context",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.881Z",
        "youtube": " GbvuAIhLUZU"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.524Z",
        "description": "In this tutorial, we'll begin to write a simple Struts 2 project. We'll create the Struts XML and an action class, and also configure a mapping.",
        "objectId": "Nfa8bqR5z3",
        "permalinkName": "Writing-a-Struts-2-Application-Part-1",
        "slNo": 4,
        "title": "Writing a Struts 2 Application Part 1",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.881Z",
        "youtube": " u4Pn1rdv5Is"
    },
	{
        "course": "maven_intro",
        "createdAt": "2014-11-26T17:01:53.346Z",
        "description": "In this tutorial, we'll download and install Maven in our development environment.",
        "objectId": "PdMXNcw5fv",
        "permalinkName": "Introduction-and-Setting-up-Part-1",
        "slNo": 1,
        "title": "Introduction and Setting up Part 1",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.928Z",
        "youtube": " al7bRZzz4oU"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:53.095Z",
        "description": "Joined inheritance strategy.",
        "objectId": "Okz48gbHOy",
        "permalinkName": "Implementing-Inheritance-With-Joined-Strategy",
        "slNo": 22,
        "title": "Implementing Inheritance With Joined Strategy",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:37:35.331Z",
        "youtube": " o1b3HFIlDS0"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.765Z",
        "description": "In this tutorial, we'll download Hibernate and set it up in our development environment by configuring it in Eclipse.",
        "objectId": "Sd7IgmOS2C",
        "permalinkName": "Setting-Up-Hibernate",
        "slNo": 2,
        "title": "Setting Up Hibernate",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.937Z",
        "youtube": " bzPkebUXxn0"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:53.080Z",
        "description": "Table per class inheritance strategy.",
        "objectId": "QD8AOhpP9T",
        "permalinkName": "Implementing-Inheritance-With-Table-Per-Class-Strategy",
        "slNo": 21,
        "title": "Implementing Inheritance With Table Per Class Strategy",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:37:34.474Z",
        "youtube": " qIdM4KQOtH8"
    },
	{
        "course": "maven_intro",
        "createdAt": "2014-11-26T17:01:53.370Z",
        "description": "In this tutorial, we'll have our first look at pom.xml and we'll compile our project.",
        "objectId": "PamKojiMhw",
        "permalinkName": "Introduction-and-Setting-up-Part-2",
        "slNo": 2,
        "title": "Introduction and Setting up Part 2",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.944Z",
        "youtube": " KlIM897RGwc"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.839Z",
        "description": "We'll try out a few more annotations to configure our entity class.",
        "objectId": "TWMet2xWJx",
        "permalinkName": "More-Annotations",
        "slNo": 7,
        "title": "More Annotations",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:36:16.677Z",
        "youtube": " I8YmYFI5D_E"
    },
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.538Z",
        "description": "We'll introduce the Model object to pass data between layers.",
        "objectId": "TKtvuLmZSC",
        "permalinkName": "Using-Model-object-in-the-MVC-Application",
        "slNo": 9,
        "title": "Using Model object in the MVC Application",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.990Z",
        "youtube": " WxeY-LxMIbE"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.531Z",
        "description": "We'll now try passing input parameters to our Struts 2 application and learn how we can capture that in our Action class.",
        "objectId": "Xiu6qS5oe2",
        "permalinkName": "Accessing-Input-Parameters",
        "slNo": 9,
        "title": "Accessing Input Parameters",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:48:23.813Z",
        "youtube": " hBljGA8wyv0"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:53.021Z",
        "description": "Many to Many mapping of entities.",
        "objectId": "ZEEFA1fC5J",
        "permalinkName": "mappedBy-and-Many-To-Many-Mapping",
        "slNo": 17,
        "title": "mappedBy and Many To Many Mapping",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:37:23.972Z",
        "youtube": " jAi8bY-H_ek"
    },
	{
        "course": "spring_data",
        "createdAt": "2014-11-26T17:01:53.516Z",
        "description": "We'll use the NamedParameterJdbcTemplate class to run queries with named placeholders.",
        "objectId": "a93oR3ES00",
        "permalinkName": "Named-Parameter-JDBC-Template",
        "slNo": 8,
        "title": "Named Parameter JDBC Template",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.093Z",
        "youtube": " W_9DJYXuhwk"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.142Z",
        "description": "This tutorial discusses three important entity object states in Hibernate: Transient, Persistent and Detached.",
        "objectId": "XwGEcteqkw",
        "permalinkName": "Transient,-Persistent-and-Detached-Objects",
        "slNo": 2,
        "title": "Transient, Persistent and Detached Objects",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.037Z",
        "youtube": " kZpRyEABnms"
    },
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.523Z",
        "description": "Calling a Business Service method from the controller.",
        "objectId": "cD3xu7twmZ",
        "permalinkName": "Writing-an-MVC-Application-Part-2",
        "slNo": 8,
        "title": "Writing an MVC Application Part 2",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.098Z",
        "youtube": " EOdvmGVdndA"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:53.050Z",
        "description": "We'll understand how to configure entity classes that have an inheritance hierarchy.",
        "objectId": "hbapT4KzBG",
        "permalinkName": "Implementing-Inheritance",
        "slNo": 19,
        "title": "Implementing Inheritance",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:37:25.537Z",
        "youtube": " Zj1mRWfhx_Y"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.563Z",
        "description": "Let's now add some JAXB annotations to our Model class to customize the resulting XML.",
        "objectId": "gb2lAUyBU4",
        "permalinkName": "Using-JAXB-Annotations-Part-2",
        "slNo": 15,
        "title": "Using JAXB Annotations Part 2",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T04:41:13.852Z",
        "youtube": " k5GbEwDFIl8"
    },
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.554Z",
        "description": "The RequestDispatcher object helps us transfer the request from the controller to the view.",
        "objectId": "kfkueWNs8a",
        "permalinkName": "Using-RequestDispatcher-in-the-MVC-Application",
        "slNo": 10,
        "title": "Using RequestDispatcher in the MVC Application",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.255Z",
        "youtube": " 3ZTxMDDmBqg"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:53.065Z",
        "description": "Single table inheritance strategy.",
        "objectId": "hzf8vsasvN",
        "permalinkName": "Single-Table-Strategy",
        "slNo": 20,
        "title": "Single Table Strategy",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:37:26.522Z",
        "youtube": " M5YrLtAHtOo"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.868Z",
        "description": "Here we'll learn how to configure the primary key in our entity class using the `@Id` annotation.",
        "objectId": "ivtJYA3E5Q",
        "permalinkName": "Primary-Keys",
        "slNo": 9,
        "title": "Primary Keys",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:36:19.084Z",
        "youtube": " Xuofihmkl_k "
    },
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.439Z",
        "description": "We'll learn how to use some page directives and how they affect our JSP.",
        "objectId": "rRdPZW2QkC",
        "permalinkName": "JSP-Page-Directives",
        "slNo": 3,
        "title": "JSP Page Directives",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.446Z",
        "youtube": " qLpm1Zxytsg"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.456Z",
        "description": "In this tutorial, we'll use dependency injection to inject an object dependency to a Spring bean.",
        "objectId": "sQHKaLjM7G",
        "permalinkName": "Injecting-Objects",
        "slNo": 7,
        "title": "Injecting Objects",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.443Z",
        "youtube": " g15RcFyEcrk"
    },
	{
        "course": "maven_intro",
        "createdAt": "2014-11-26T17:01:53.399Z",
        "description": "We'll now learn what the build process in Maven consists of, the build phases and we'll run commands to execute some phases.",
        "objectId": "x9uBrfNtEb",
        "permalinkName": "Maven-Build-Phases",
        "slNo": 4,
        "title": "Maven Build Phases",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.506Z",
        "youtube": " IYRYbPR5Gek"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.569Z",
        "description": "In this video, we will switch back to the client side and learn more about wsimport, the tool we used to generate client stubs.",
        "objectId": "zbit6v4vCS",
        "permalinkName": "wsimport-Revisited",
        "slNo": 20,
        "title": "wsimport Revisited",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T04:41:18.293Z",
        "youtube": " lwXsrcJyjiI"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.532Z",
        "description": "We'll now learn how to make POST requests to actions, using both HTML forms and Struts 2 tags.",
        "objectId": "zMC1c01wbv",
        "permalinkName": "Post-requests-to-actions",
        "slNo": 10,
        "title": "Post requests to actions",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:48:24.594Z",
        "youtube": " cG7FNgD11iE"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.498Z",
        "description": "In this tutorial, we'll learn about a few other Pointcut expressions that can be used to advice different methods.",
        "objectId": "yj2Kke19o3",
        "permalinkName": "A-Few-More-Pointcut-Expressions",
        "slNo": 6,
        "title": "A Few More Pointcut Expressions",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.534Z",
        "youtube": " UxzTk57CJD8"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.925Z",
        "description": "We'll now learn how to save value types that are collection objects.",
        "objectId": "fQnACDqAsf",
        "permalinkName": "Saving-Collections",
        "slNo": 12,
        "title": "Saving Collections",
        "unitDescription": "This unit covers advanced JPA annotations for mapping arrays, collections and several object oriented constructs like associations and inheritance.",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:37:20.019Z",
        "youtube": " hofWx5_ZN9c"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2014-12-07T21:17:07.536Z",
        "description": "In this tutorial, we will learn some HTTP concepts that have influenced REST.",
        "objectId": "ALxaxuhZZo",
        "permalinkName": "REST-and-HTTP",
        "slNo": 2,
        "title": "REST and HTTP",
        "unitNumber": 1,
        "updatedAt": "2014-12-07T21:18:09.665Z",
        "youtube": "RuICubxGvj4"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2014-12-07T23:11:41.784Z",
        "description": "You can think of RESTful URIs as belonging to two types: instance resource URIs and collection resource URIs. Let's understand what they mean.",
        "objectId": "UzDLYi6iwn",
        "permalinkName": "RESTful-URI-types",
        "slNo": 4,
        "title": "RESTful URI types",
        "unitNumber": 1,
        "updatedAt": "2014-12-07T23:13:27.529Z",
        "youtube": "gYKJqUZXuBw"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.316Z",
        "description": "We'll configure EHCache as our second level cache, and then put it to work. We'll fetch an object across two sessions, and we'll see how Hibernate's second level cache comes into play to save a database query.",
        "objectId": "LanWHcYFvP",
        "permalinkName": "Configuring-Second-Level-Cache",
        "slNo": 13,
        "title": "Configuring Second Level Cache",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:46:14.727Z",
        "youtube": " TMZZg-HEjiE"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.538Z",
        "description": "This tutorial explores the method attribute in action mappings and how we can have multiple methods in a single Action class run for different URL mappings.",
        "objectId": "OWn4v7mxaI",
        "permalinkName": "Configuring-methods-in-Action-mappings",
        "slNo": 15,
        "title": "Configuring methods in Action mappings",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:48:35.221Z",
        "youtube": " toCQ_CSXpgw"
    },
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.469Z",
        "description": "Here we'll see how our understanding of the init concepts of servlets translates to JSPs.",
        "objectId": "OKpHWJc1hx",
        "permalinkName": "Using-jspInit-and-InitParams",
        "slNo": 5,
        "title": "Using jspInit and InitParams",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.942Z",
        "youtube": " g15_vDp0HIg"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.501Z",
        "description": "We'll learn about the After Advice types: `After` (finally), `AfterReturning` and `AfterThrowing`.",
        "objectId": "PVnyBtAboN",
        "permalinkName": "After-Advice-Types",
        "slNo": 8,
        "title": "After Advice Types",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.934Z",
        "youtube": " tU6eQh9Hmqk"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.504Z",
        "description": "We'll learn how to configure aspects, advice and pointcuts using the traditional XML way.",
        "objectId": "TsmCx9Gyqq",
        "permalinkName": "AOP-XML-configuration",
        "slNo": 11,
        "title": "AOP XML configuration",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.987Z",
        "youtube": " ewWzxcNnI7k"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.780Z",
        "description": "In this first of a three part video on writing a simple Hibernate application from the scratch, we'll learn how to write the Hibernate configuration XML file, hibernate.cfg.xml.",
        "objectId": "TTSddRCYiJ",
        "permalinkName": "Writing-a-Hibernate-Application",
        "slNo": 3,
        "title": "Writing a Hibernate Application",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:05.992Z",
        "youtube": " N2F1zCAf_NU"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.542Z",
        "description": "How does the default interceptor configuration work? What is the necessary configuration to setup an interceptor in Struts 2? We answer these questions in this tutorial.",
        "objectId": "VPcyBOvFbm",
        "permalinkName": "Configuring-Interceptors",
        "slNo": 18,
        "title": "Configuring Interceptors",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:48:38.386Z",
        "youtube": " Kkn_8BcmopA "
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.896Z",
        "description": "We'll learn the difference between Entity type objects and Value type objects. We'll use the `@Embeddable` annotation to embed a value type object into our Entity class.",
        "objectId": "V6mINBuqQq",
        "permalinkName": "Value-Types-and-Embedding-Objects",
        "slNo": 10,
        "title": "Value Types and Embedding Objects",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:36:20.571Z",
        "youtube": " c2abcy0Q1a0"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.478Z",
        "description": "In this tutorial, we'll learn what bean definition inheritance is, and how to configure a parent bean definition and have children beans inherit the bean definitions.",
        "objectId": "VyyOX8O7GA",
        "permalinkName": "Bean-Definition-Inheritance",
        "slNo": 13,
        "title": "Bean Definition Inheritance",
        "unitNumber": 2,
        "updatedAt": "2014-12-04T05:55:05.990Z",
        "youtube": " LxRiFFEXs5I"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.541Z",
        "description": "In this tutorial, we'll discuss one of the most important concepts in Struts 2: Interceptors. We will understand what interceptors are and how they've been working all along in our Struts 2 application.",
        "objectId": "VndYMyyKkS",
        "permalinkName": "Introducing-Interceptors",
        "slNo": 17,
        "title": "Introducing Interceptors",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:48:37.576Z",
        "youtube": " DjeAqwW_J2U "
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.484Z",
        "description": "Here we'll have our first look at Spring annotations. We'll understand and implement the Required annotation, and we'll also learn how it's actually a BeanPostProcessor that's working behind the scenes.",
        "objectId": "X0sYXMg1Oe",
        "permalinkName": "Introduction-to-Annotations-and-the-Required-Annotation",
        "slNo": 18,
        "title": "Introduction to Annotations and the Required Annotation",
        "unitDescription": "Annotations and Event Handling",
        "unitNumber": 3,
        "updatedAt": "2014-12-04T05:55:06.039Z",
        "youtube": " Fs_IoEGSP-A"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.449Z",
        "description": "In this tutorial, we'll understand the concept of Dependency Injection and how it simplifies managing dependencies between objects.",
        "objectId": "YPPy8Z7a3q",
        "permalinkName": "Understanding-Dependency-Injection",
        "slNo": 1,
        "title": "Understanding Dependency Injection",
        "unitDescription": "Introduction to Spring and Dependency Injection",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.038Z",
        "youtube": " GB8k2-Egfv0"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.257Z",
        "description": "This tutorial is an introduction to the Criteria API. Yet another way to work with data in Hibernate.",
        "objectId": "Z2VdL3mvFj",
        "permalinkName": "Introduction-to-Criteria-API",
        "slNo": 9,
        "title": "Introduction to Criteria API",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:46:11.221Z",
        "youtube": " 4fVlAobgQGI"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.557Z",
        "description": "Having understood the important elements of the WSDL, we'll now learn some annotations that help us configure and override the various defaults that are used when the WSDL is generated.",
        "objectId": "bARjSvHxs3",
        "permalinkName": "Customizing-the-WSDL",
        "slNo": 11,
        "title": "Customizing the WSDL",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T04:40:48.846Z",
        "youtube": " xq2zi_UWzUE"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.564Z",
        "description": "Web services return 'Fault' messages to denote error scenarios. In this tutorial, we'll throw an exception, generate and examine a fault message.",
        "objectId": "cCMbdlwb3n",
        "permalinkName": "Handling-Faults",
        "slNo": 16,
        "title": "Handling Faults",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:43:30.322Z",
        "youtube": "t9GzOCN2UBk"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.940Z",
        "description": "More configuration options for collections, including configuring primary keys.",
        "objectId": "c8CoIb9Myf",
        "permalinkName": "Configuring-Collections-and-Adding-Keys",
        "slNo": 13,
        "title": "Configuring Collections and Adding Keys",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:37:20.770Z",
        "youtube": " kk207HAym_I"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.482Z",
        "description": "When using Spring for dependency injection, it's a good practice to use interfaces for referencing dependencies. In this tutorial, we'll learn how to 'code to interfaces'.",
        "objectId": "cL4rkkHNPc",
        "permalinkName": "Coding-To-Interfaces",
        "slNo": 17,
        "title": "Coding To Interfaces",
        "unitNumber": 2,
        "updatedAt": "2014-12-04T05:55:06.160Z",
        "youtube": " 5IDIEMxdkC8"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.522Z",
        "description": "We'll try to understand what an MVC framework should typically do, and what components any such framework should have. We'll then have a high level look at some of the core Struts 2 modules.",
        "objectId": "cIJv3jDuOM",
        "permalinkName": "Introduction-to-Struts-2",
        "slNo": 2,
        "title": "Introduction to Struts 2",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.154Z",
        "youtube": " 9BvQpf7JcOI"
    },
	{
        "course": "spring_data",
        "createdAt": "2014-11-26T17:01:53.515Z",
        "description": "We'll now implement some database write operations. We'll write a DAO method to update a value in the database, as well as use the execute() method to run a DDL SQL query.",
        "objectId": "fNxamLpUmR",
        "permalinkName": "Performing-Write-Operations-with-JdbcTemplate",
        "slNo": 7,
        "title": "Performing Write Operations with JdbcTemplate",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.162Z",
        "youtube": " BiSIAzSZHpY"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.537Z",
        "description": "This video introduces the ActionSupport class and one of the features of the class, validation. We'll look at the validate() method and how we can implement simple form validations in Struts 2.",
        "objectId": "gclvf7t9jS",
        "permalinkName": "The-ActionSupport-Class",
        "slNo": 14,
        "title": "The ActionSupport Class",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:48:33.766Z",
        "youtube": " R6n511ZC50Q"
    },
	{
        "course": "servlets_intro",
        "createdAt": "2014-11-26T17:01:52.708Z",
        "description": "We'll look at the GET and POST methods in more detail, and we'll learn when to do what. We'll also have a sneak peek at Apache Tomcat's implementation of the `doGet` and `doPost` methods.",
        "objectId": "jnKs31n9KO",
        "permalinkName": "Understanding-GET-and-POST",
        "slNo": 8,
        "title": "Understanding GET and POST",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.253Z",
        "youtube": " yzC4oDXfkl0"
    },
	{
        "course": "spring_aop",
        "createdAt": "2014-11-26T17:01:53.503Z",
        "description": "In this video, I share some thoughts on naming conventions, and how it helps in the case of writing aspects in Spring. We will also understand how to write our own custom annotations to apply advice to methods.",
        "objectId": "kS0a1RptcR",
        "permalinkName": "Naming-Conventions-and-Custom-Advice-Annotations",
        "slNo": 10,
        "title": "Naming Conventions and Custom Advice Annotations",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.252Z",
        "youtube": " Clz78J7SBKQ"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.491Z",
        "description": "We'll now look at Spring's support for Event Handling. We'll write an event listener in this tutorial. I'll also show you how to write custom events and publish them anywhere in the code.",
        "objectId": "k8BnNZxdhu",
        "permalinkName": "Event-Handling-in-Spring",
        "slNo": 23,
        "title": "Event Handling in Spring",
        "unitNumber": 3,
        "updatedAt": "2014-12-04T05:55:06.260Z",
        "youtube": " ZUe1Xz7DAcY"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.795Z",
        "description": "We'll now create a Model class and configure it as an Entity using Annotations.",
        "objectId": "kD16ue0Gfm",
        "permalinkName": "Writing-the-Model-Class-with-Annotations",
        "slNo": 4,
        "title": "Writing the Model Class with Annotations",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.253Z",
        "youtube": " 3eXjpve0QaI"
    },
	{
        "course": "servlets_intro",
        "createdAt": "2014-11-26T17:01:52.693Z",
        "description": "We'll look at few other options in the types of parameters that can be passed to the servlet.",
        "objectId": "miWE1k39iE",
        "permalinkName": "Passing-More-Parameters",
        "slNo": 7,
        "title": "Passing More Parameters",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.333Z",
        "youtube": " 0WPfqrSCb6c"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.526Z",
        "description": "We'll understand the concept of namespaces when mapping Struts 2 actions. We'll configure a namespace, and also understand the default '/' namespace.",
        "objectId": "mfhDXAGtop",
        "permalinkName": "Understanding-Namespaces",
        "slNo": 6,
        "title": "Understanding Namespaces",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:48:22.121Z",
        "youtube": " BlFHGscURC4"
    },
	{
        "course": "struts2_intro",
        "createdAt": "2014-11-26T17:01:53.529Z",
        "description": "We'll now look at how data from the action class is made available to Struts 2 tags. We'll understand a few core concepts of the framework. This will also be our first look at the ValueStack object.",
        "objectId": "mOOY9lQLrE",
        "permalinkName": "The-ValueStack",
        "slNo": 8,
        "title": "The ValueStack",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:48:23.146Z",
        "youtube": " EZpwBJ6EfDw"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.552Z",
        "description": "We'll now convert the simple Java class in the previous tutorial into a web service, deploy it to Glassfish, and test it by submitting a SOAP request to get a SOAP response.",
        "objectId": "oac92gyEV3",
        "permalinkName": "Writing-a-Web-Service---Code-and-Deploy",
        "slNo": 7,
        "title": "Writing a Web Service - Code and Deploy",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T04:38:58.824Z",
        "youtube": " u5cQkVgq6jE"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.287Z",
        "description": "In this tutorial, we'll learn how to use Projections to fine tune the results of the Criteria API. We'll also use Query By Example (QBE) to easily specify multiple where clauses in a single example object.",
        "objectId": "n2w54MCP8l",
        "permalinkName": "Projections-and-Query-By-Example",
        "slNo": 11,
        "title": "Projections and Query By Example",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:46:12.580Z",
        "youtube": " 2DXjdl8gzOo"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:53.036Z",
        "description": "In this tutorial, we'll look at some concepts like CascadeType which can be configured for entity relationships.",
        "objectId": "rGgH5Y6FCO",
        "permalinkName": "CascadeTypes-and-Other-Things",
        "slNo": 18,
        "title": "CascadeTypes and Other Things",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:37:24.787Z",
        "youtube": " K2Id3WLZWJI"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.474Z",
        "description": "We'll now look at a configuration feature provided by Spring to wire dependencies automatically: Bean Autowiring. We'll learn about different types of autowiring, and we'll write some code to implement bean autowiring by name.",
        "objectId": "rJxHlmo7uO",
        "permalinkName": "Bean-Autowiring",
        "slNo": 10,
        "title": "Bean Autowiring",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.370Z",
        "youtube": " suiEGbKf21g"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.488Z",
        "description": "We'll now use the Component annotation to define Spring beans. We'll also look at some Stereotype annotations.",
        "objectId": "ozqABREe60",
        "permalinkName": "Component-and-Stereotype-Annotations",
        "slNo": 21,
        "title": "Component and Stereotype Annotations",
        "unitNumber": 3,
        "updatedAt": "2014-12-04T05:55:06.364Z",
        "youtube": " oTcSW4-_1Ew"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.911Z",
        "description": "In this video, we'll learn how to override configuration inside embedded objects, and we'll also explore object keys.",
        "objectId": "qwBwUj26iZ",
        "permalinkName": "AttributeOverrides-and-Embedded-Object-Keys",
        "slNo": 11,
        "title": "AttributeOverrides and Embedded Object Keys",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:36:21.564Z",
        "youtube": " X8t6oYp0Uk8"
    },
	{
        "course": "jsps_intro",
        "createdAt": "2014-11-26T17:01:52.584Z",
        "description": "We'll learn JSTL's support for the request parameters and the setProperty tag.",
        "objectId": "soX0lEtknT",
        "permalinkName": "Request-Parameters-with-the-setProperty-tag",
        "slNo": 12,
        "title": "Request Parameters with the setProperty tag",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.441Z",
        "youtube": " 4GAJ5pxQ-3c"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.547Z",
        "description": "In this video, we'll learn how to use the wsimport utility to create stubs that can be used to make web service calls.",
        "objectId": "ty2kg6gvEH",
        "permalinkName": "Writing-a-Web-service-Client---Stub-generation",
        "slNo": 3,
        "title": "Writing a Web service Client - Stub generation",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.450Z",
        "youtube": " 6hqDMS-oJ9k"
    },
	{
        "course": "servlets_intro",
        "createdAt": "2014-11-26T17:01:52.737Z",
        "description": "In this three part tutorial, we understand how a servlet is initialized, the methods that get called and the objects used on initialization and execution.",
        "objectId": "uhZKZhoPeu",
        "permalinkName": "Understanding-init,-service-and-ServletConfig",
        "slNo": 10,
        "title": "Understanding init, service and ServletConfig",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.426Z",
        "youtube": " "
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.471Z",
        "description": "In this tutorial, we'll initialize a member variable that's a collection and each of the elements are references to other beans.",
        "objectId": "tUMKHGLH6Y",
        "permalinkName": "Initializing-Collections",
        "slNo": 9,
        "title": "Initializing Collections",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.442Z",
        "youtube": " MgYURkcYeDQ"
    },
	{
        "course": "maven_intro",
        "createdAt": "2014-11-26T17:01:53.428Z",
        "description": "We'll use the web application archetype to create a barebones web application. We'll then package, deploy in Tomcat and access this application.",
        "objectId": "tyizzWqjce",
        "permalinkName": "A-Web-Application-Using-Maven",
        "slNo": 6,
        "title": "A Web Application Using Maven",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.445Z",
        "youtube": " mpNnbBmh5J4"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.465Z",
        "description": "In this tutorial, we'll look at some concepts related to bean naming and usage like alias and idref. We'll also understand how to write inner beans.",
        "objectId": "yU79PAMDXE",
        "permalinkName": "Inner-Beans,-Aliases-and-idref",
        "slNo": 8,
        "title": "Inner Beans, Aliases and idref",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.503Z",
        "youtube": " TW51XsixMqA"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.551Z",
        "description": "In this tutorial, we'll setup the new Eclipse Kepler, configure Glassfish and start writing the web application with which we intend to create a web service.",
        "objectId": "vUoMG0a8C1",
        "permalinkName": "Writing-a-Web-Service---Eclipse-setup",
        "slNo": 6,
        "title": "Writing a Web Service - Eclipse setup",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T04:38:58.045Z",
        "youtube": " 9kb0iLpqKY4"
    },
	{
        "course": "spring_core",
        "createdAt": "2014-11-26T17:01:53.454Z",
        "description": "We'll first replace the BeanFactory with the more powerful ApplicationContext. We'll then make Spring initialize a property of an object by specifying the value in the configuration XML.",
        "objectId": "vcYzEsTUor",
        "permalinkName": "ApplicationContext-and-Property-Initialization",
        "slNo": 5,
        "title": "ApplicationContext and Property Initialization",
        "unitNumber": 1,
        "updatedAt": "2014-12-04T05:55:06.505Z",
        "youtube": " ZxLaEovze3M"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.555Z",
        "description": "In this tutorial, we'll understand the two common methodologies for designing and writing web services - the service first (or code first) and the contract first (or WSDL first) approaches.",
        "objectId": "zN9rAuT5v3",
        "permalinkName": "Service-First-and-Contract-First-Web-Services",
        "slNo": 9,
        "title": "Service First and Contract First Web Services",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T04:40:47.553Z",
        "youtube": " S0zdMGNrxr0"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.545Z",
        "description": "Welcome to this tutorial course on SOAP web services in Java. We'll start with an introduction to web services. We'll understand what they are and how they are useful.",
        "objectId": "INDMMEsJj4",
        "permalinkName": "Introduction-to-Web-Services",
        "slNo": 1,
        "title": "Introduction to Web Services",
        "unitDescription": "This unit introduces you to web services. You'll learn some of the terminologies. You'll also build a simple client program that consumes an existing web service.",
        "unitNumber": 1,
        "updatedAt": "2014-12-06T04:38:43.229Z",
        "youtube": " mKjvKPlb1rA"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.549Z",
        "description": "In this tutorial, we'll walk through the steps to install the Java EE 7 SDK which includes the Glassfish 4 application server installation. We'll learn some basics of how to start, stop and manage Glassfish.",
        "objectId": "oHpRejCFt1",
        "permalinkName": "Setting-up-Java-EE-7-SDK",
        "slNo": 5,
        "title": "Setting up Java EE 7 SDK",
        "unitDescription": "In this unit, you'll setup your development environment to build JAX-WS web services. You'll also write a web service and learn how to customize the WSDL, schema, write custom types, annotations and bind to XML using JAXB.",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T04:42:37.378Z",
        "youtube": " Zx6NuO6niFI"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.567Z",
        "description": "In this tutorial, you'll learn about the Web Service Explorer tool that come with Eclipse to test and examine web services.",
        "objectId": "PDH2RzQ2Zw",
        "permalinkName": "Using-Web-Service-Explorer",
        "slNo": 18,
        "title": "Using Web Service Explorer",
        "unitDescription": "",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T04:43:29.618Z",
        "youtube": " 73YeFMmzBts"
    },
	{
        "course": "javaee_jaxws",
        "createdAt": "2014-11-26T17:01:53.565Z",
        "description": "This is a quick introduction to a web service testing tool called SoapUI. We use this tool to test our web service without having to use the Glassfish tester page. In this video, you'll learn how to install the SoapUI plugin in eclipse, create a new project and make a SOAP web service call from it.",
        "objectId": "1UYEWeRCfm",
        "permalinkName": "Using-SoapUI",
        "slNo": 17,
        "title": "Using SoapUI",
        "unitDescription": "In this unit, you'll learn about some of the tools that let you work with SOAP web services. You'll also revisit the wsimport utility and learn what it does.",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T04:43:31.756Z",
        "youtube": " CAHMJFerXps"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.751Z",
        "description": "In this tutorial, we'll understand the mismatch between object and relational models and what ORM is.",
        "objectId": "4leitiAB0o",
        "permalinkName": "Introduction-To-Hibernate",
        "slNo": 1,
        "title": "Introduction To Hibernate",
        "unitDescription": "This unit introduces you to the Hibernate framework. You'll understand what ORM means and the role Hibernate plays as an ORM. You'll also create a simple working Java application that uses Hibernate to save an object to the database.",
        "unitNumber": 1,
        "updatedAt": "2014-12-06T07:35:07.528Z",
        "youtube": " Yv2xctJxE-w"
    },
	{
        "course": "hibernate_intro",
        "createdAt": "2014-11-26T17:01:52.824Z",
        "description": "In this tutorial, we'll look at the schema generation options in Hibernate. We'll also learn some annotations to change the default name generated by Hibernate for entities.",
        "objectId": "jq4S6cXDZc",
        "permalinkName": "hbm2ddl-Configuration-and-Name-Annotations",
        "slNo": 6,
        "title": "hbm2ddl Configuration and Name Annotations",
        "unitDescription": "In this unit, you'll start learning about JPA annotations - a way for you to map Java classes and its member variables into relational database tables.",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:36:03.730Z",
        "youtube": " iaSd_yK9xaw"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.110Z",
        "description": "Writing code to Create, Read, Update and Delete entities in the database.",
        "objectId": "Amkk7gN5iw",
        "permalinkName": "CRUD-Operations",
        "slNo": 1,
        "title": "CRUD Operations",
        "unitDescription": "This unit covers a full CRUD set of operations. Learn how to use Hibernate's runtime APIs to read and write entities to the database.",
        "unitNumber": 1,
        "updatedAt": "2014-12-06T07:45:08.903Z",
        "youtube": " hDBQy-dWC0A"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.189Z",
        "description": "Introducing HQL and using HQL to run queries on the database.",
        "objectId": "L88lnNmEZp",
        "permalinkName": "Introducing-HQL-and-the-Query-Object",
        "slNo": 5,
        "title": "Introducing HQL and the Query Object",
        "unitDescription": "You'll now learn how to use a query language for working with Hibernate entities - called Hibernate Query Language (HQL).",
        "unitNumber": 2,
        "updatedAt": "2014-12-06T07:46:09.276Z",
        "youtube": " Em4M2tUn1bU"
    },
	{
        "course": "hibernate_run",
        "createdAt": "2014-11-26T17:01:53.302Z",
        "description": "In this tutorial, we'll learn about Hibernate's cache support: both first level (Session) and second level cache.",
        "objectId": "cLzJjmheWQ",
        "permalinkName": "Cacheing-in-Hibernate",
        "slNo": 12,
        "title": "Cacheing in Hibernate",
        "unitDescription": "Hibernate integrates with certain caching systems to improve performance. You'll now learn how to integrate the open source caching library EHCache with Hibernate.",
        "unitNumber": 3,
        "updatedAt": "2014-12-06T07:46:14.035Z",
        "youtube": " ISi_OkmuQbs"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2014-12-07T20:58:53.336Z",
        "description": "Welcome to this course. This tutorial introduces you to REST APIs and explains some basic concepts.",
        "objectId": "nZ9PIuGdOs",
        "permalinkName": "introduction",
        "slNo": 1,
        "title": "Introduction",
        "unitDescription": "This unit introduces you to the concept of REST. You'll understand what RESTful web services are and how to design a good REST API.",
        "unitNumber": 1,
        "updatedAt": "2014-12-07T21:00:41.934Z",
        "youtube": "xkKcdK1u95s"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2014-12-07T23:00:18.413Z",
        "description": "In this tutorial, we’ll start designing a sample RESTful API for our sample social media application. And through the process, we’ll understand how RESTful URIs are designed.",
        "objectId": "HMHf1QTX5n",
        "permalinkName": "Designing-Resource-URIs",
        "slNo": 3,
        "title": "Designing Resource URIs",
        "unitNumber": 1,
        "updatedAt": "2014-12-07T23:01:17.283Z",
        "youtube": "NjpKwiRORI4"
    },
	{
        "ACL": {
            "*": {
                "read": true
            }
        },
        "course": "javaee_jaxrs",
        "createdAt": "2014-12-07T23:27:06.735Z",
        "description": "Now that we've identified some important resource URIs, let's work on the operations that can be performed and the data that's exchanged.",
        "objectId": "e6l0UjE1cJ",
        "permalinkName": "HTTP-Methods",
        "slNo": 5,
        "title": "HTTP Methods",
        "unitNumber": 1,
        "updatedAt": "2014-12-08T03:59:57.576Z",
        "youtube": "AK6TulIASgQ"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2014-12-09T03:39:50.584Z",
        "description": "Idempotence. Yes, that's a word. And it's an important property of HTTP methods according to the specifications.",
        "objectId": "dFcGIE1B52",
        "permalinkName": "Idempotence-In-HTTP-Methods",
        "slNo": 6,
        "title": "Idempotence In HTTP Methods",
        "unitNumber": 1,
        "updatedAt": "2014-12-09T03:41:21.024Z",
        "youtube": "rhTkRK53XdQ"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2014-12-13T04:04:46.763Z",
        "description": "We've looked at requests so far, and understood resource URIs and HTTP methods. Let's switch to responses now.",
        "objectId": "HerroIL3Nb",
        "permalinkName": "Rest-Response",
        "slNo": 7,
        "title": "REST Response",
        "unitNumber": 1,
        "updatedAt": "2014-12-13T04:05:45.854Z",
        "youtube": "ZyuPCYB-n5o"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2014-12-19T05:18:13.970Z",
        "description": "In this tutorial, we'll learn about an important concept relating to REST APIs: HATEOAS\n",
        "objectId": "Qh8NTQ3Ojq",
        "permalinkName": "HATEOAS",
        "slNo": 8,
        "title": "HATEOAS",
        "unitNumber": 1,
        "updatedAt": "2014-12-19T05:19:30.750Z",
        "youtube": "NK3HNEwDXUk"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-03-22T05:28:29.837Z",
        "description": "In this tutorial, we'll learn about the Richardson Maturity Model, a way for REST APIs to be classified, and the \"RESTfulness\" of an API determined.",
        "objectId": "iD1RNyvR9l",
        "permalinkName": "The-Richardson-Maturity-Model",
        "slNo": 9,
        "title": "The Richardson Maturity Model",
        "unitNumber": 1,
        "updatedAt": "2015-03-22T05:29:38.946Z",
        "youtube": "qHbTE3qvUsQ"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-03-27T16:35:00.417Z",
        "description": "In this tutorial, we understand what JAX-RS is and how it relates to Jersey, the implementation library.",
        "objectId": "GIdaA3U6SB",
        "permalinkName": "What-Is-JAXRS",
        "slNo": 10,
        "title": "What Is JAX-RS?",
        "unitDescription": "In this unit, we learn about writing REST APIs in Java with JAX-RS. We will build the Messenger API with JAX-RS and Jersey.",
        "unitNumber": 2,
        "updatedAt": "2015-03-27T16:37:09.513Z",
        "youtube": "BuYivu9ZjDw"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-04-01T01:51:22.722Z",
        "description": "We will now setup a new project in our development environment to start writing a REST API application.",
        "objectId": "UqnIkBox9l",
        "permalinkName": "Setting-Up",
        "slNo": 11,
        "title": "Setting Up",
        "unitNumber": 2,
        "updatedAt": "2015-04-01T01:52:12.584Z",
        "youtube": "skltzZH7i4w"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-04-02T01:13:39.021Z",
        "description": "Let's now look under the hood and understand how the REST API application works. We'll understand some of the components that handle the API requests and how they fit together.",
        "objectId": "JSpysaoNw9",
        "permalinkName": "Understanding-The-Application-Structure",
        "slNo": 12,
        "title": "Understanding The Application Structure",
        "unitNumber": 2,
        "updatedAt": "2015-04-02T01:32:11.544Z",
        "youtube": "rKSnB3Bl12w"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-04-06T06:38:24.758Z",
        "description": "In this tutorial, we'll create our first JAX-RS resource that handles a GET request to an API URL.",
        "objectId": "9Ot8qNjjfg",
        "permalinkName": "Creating-A-Resource",
        "slNo": 13,
        "title": "Creating A Resource",
        "unitNumber": 2,
        "updatedAt": "2015-04-06T06:39:18.451Z",
        "youtube": "2QD1sOG8pyU"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-04-13T05:39:09.527Z",
        "description": "Let's return some data in XML format from the resource. We'll update the MessageResource to return a list of Messages in XML.",
        "objectId": "QTi3dP8Q4e",
        "permalinkName": "Returning-Xml-Response",
        "slNo": 14,
        "title": "Returning XML Response",
        "unitNumber": 2,
        "updatedAt": "2015-04-13T05:40:12.895Z",
        "youtube": "BaZdlJSts5A"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-04-14T06:18:14.800Z",
        "description": "Now I'll introduce you to a REST API client that will be useful for the rest of the course, for making REST API calls. The example client I demonstrate, called Postman, is a Chrome add-on.",
        "objectId": "Hxzcgqq6nA",
        "permalinkName": "Installing-A-Rest-Api-Client",
        "slNo": 15,
        "title": "Installing A REST API Client",
        "unitNumber": 2,
        "updatedAt": "2015-04-14T06:19:16.856Z",
        "youtube": "vbP1ZCDfIfw"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-04-15T05:14:24.254Z",
        "description": "In this tutorial, we'll build and stub business and data services that we can call from the Message resource class.",
        "objectId": "DHIMhcy9cd",
        "permalinkName": "Building-Service-Stubs",
        "slNo": 16,
        "title": "Building Service Stubs",
        "unitNumber": 2,
        "updatedAt": "2015-04-15T05:15:29.090Z",
        "youtube": "UXdoBGLDnRg"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-04-27T03:01:46.098Z",
        "description": "In this tutorial, you'll learn how to access and map to URL with path parameters, using the @PathParam annotation.",
        "objectId": "XDkDbl3ZU7",
        "permalinkName": "Accessing-Path-Params",
        "slNo": 17,
        "title": "Accessing Path Params",
        "unitNumber": 2,
        "updatedAt": "2015-04-27T03:03:38.562Z",
        "youtube": "U4tOw0LxQW4"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-05-03T20:02:45.164Z",
        "description": "We'll now switch the response format of the APIs from XML to JSON.",
        "objectId": "fyt2baXun3",
        "permalinkName": "Returning-JSON-Response",
        "slNo": 18,
        "title": "Returning JSON Response",
        "unitNumber": 2,
        "updatedAt": "2015-05-03T20:04:19.458Z",
        "youtube": "5KLFUwcIKkw"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-05-04T13:46:43.324Z",
        "description": "In this tutorial, we'll implement the POST method API to create new instances of Message resource.",
        "objectId": "OIldKxnCFM",
        "permalinkName": "Implementing-POST-Method",
        "slNo": 19,
        "title": "Implementing POST Method",
        "unitNumber": 2,
        "updatedAt": "2015-05-04T13:47:39.791Z",
        "youtube": "6HWUrp6buqQ"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-05-05T04:43:18.856Z",
        "description": "We'll now implement update and delete APIs with the PUT and DELETE methods respectively.",
        "objectId": "t5wd7qsxTw",
        "permalinkName": "Implementing-Update-And-Delete",
        "slNo": 20,
        "title": "Implementing Update and Delete",
        "unitNumber": 2,
        "updatedAt": "2015-05-05T04:43:57.637Z",
        "youtube": "HePAArH5BrU"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-05-06T05:35:40.320Z",
        "description": "Now, we'll implement another resource, the ProfileResource class.",
        "objectId": "4H9gQKh8Uw",
        "permalinkName": "Implementing-ProfileResource",
        "slNo": 21,
        "title": "Implementing ProfileResource",
        "unitNumber": 2,
        "updatedAt": "2015-05-06T05:38:32.883Z",
        "youtube": "Ik7jv3d-1qY"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-05-07T06:24:15.690Z",
        "description": "In this tutorial, we'll learn how to implement pagination and filtering features in REST APIs.",
        "objectId": "UK38KqggTH",
        "permalinkName": "Pagination-And-Filtering",
        "slNo": 22,
        "title": "Pagination And Filtering",
        "unitNumber": 2,
        "updatedAt": "2015-05-07T06:26:50.331Z",
        "youtube": "WC6wy3Kg5pk"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-05-08T05:15:57.073Z",
        "description": "In this tutorial, you'll learn about a few more Param annotations that inject request values into resource methods.",
        "objectId": "nHrYi9rsdB",
        "permalinkName": "The-Param-Annotations",
        "slNo": 23,
        "title": "The Param Annotations",
        "unitNumber": 2,
        "updatedAt": "2015-05-08T05:16:57.284Z",
        "youtube": "Mqpgca6654Q"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-05-09T05:48:22.202Z",
        "description": "In this tutorial, we'll cover a few more ways to have request information injected into resource methods. We'll look at Context and BeanParam annotations.",
        "objectId": "WJopDyQWkb",
        "permalinkName": "Using-Context-And-BeanParam-Annotations",
        "slNo": 24,
        "title": "Using Context And BeanParam Annotations",
        "unitNumber": 2,
        "updatedAt": "2015-05-09T05:49:36.398Z",
        "youtube": "4nZUT1oBI1g"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-05-10T05:37:19.538Z",
        "description": "We'll now implement nested resources using the \"sub-resources\" feature in JAX-RS. ",
        "objectId": "KYBnWNGmRP",
        "permalinkName": "Implementing-Subresources",
        "slNo": 25,
        "title": "Implementing Subresources",
        "unitNumber": 2,
        "updatedAt": "2015-05-10T05:38:40.612Z",
        "youtube": "O4dAxOCYAUg"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-05-14T04:36:50.055Z",
        "description": "Learn how to send status codes and location headers from REST APIs. We'll update the create API to send the 201 status code and the Location header.",
        "objectId": "y0dHhpyx6H",
        "permalinkName": "Sending-Status-Codes-and-Location-Headers",
        "slNo": 26,
        "title": "Sending Status Codes and Location Headers",
        "unitNumber": 2,
        "updatedAt": "2015-05-14T04:37:57.772Z",
        "youtube": "HEabElNrfbo"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-05-24T20:52:25.293Z",
        "description": "Learn how to handle exceptions in a REST API application using Jersey's ExceptionMapper.",
        "objectId": "mEHpMDMdpX",
        "permalinkName": "Handling-Exceptions",
        "slNo": 27,
        "title": "Handling Exceptions",
        "unitNumber": 2,
        "updatedAt": "2015-05-24T20:54:10.648Z",
        "youtube": "9oeJc_VkZxo"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-05-26T03:13:30.914Z",
        "description": "Here's another way to handle exception scenarios in JAX-RS, using WebApplicationException.",
        "objectId": "QqgSPMkQXu",
        "permalinkName": "Using-WebApplicationException",
        "slNo": 28,
        "title": "Using WebApplicationException",
        "unitNumber": 2,
        "updatedAt": "2015-05-26T03:24:13.622Z",
        "youtube": "Vdk_tUhcJZM"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-06-01T16:36:30.880Z",
        "description": "In Part 1 of this 2-part tutorial, we'll implement HATEOAS links in the Message response for the \"self\" rel attribute.",
        "objectId": "PRyJ74Ssm3",
        "permalinkName": "HATEOAS-Part-1",
        "slNo": 29,
        "title": "HATEOAS (Part 1)",
        "unitNumber": 2,
        "updatedAt": "2015-06-01T16:37:54.267Z",
        "youtube": "Mp6LpIg7h84"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-06-05T04:25:23.802Z",
        "description": "In Part 2 of this 2-part tutorial, we'll implement HATEOAS links in the Message response for the \"profile\" and \"comment\" rel attributes.",
        "objectId": "vyLCtx34gw",
        "permalinkName": "HATEOAS-Part-2",
        "slNo": 30,
        "title": "HATEOAS (Part 2)",
        "unitNumber": 2,
        "updatedAt": "2015-06-05T04:26:11.262Z",
        "youtube": "dtO5NQ8K5Wo"
    },
	{
        "course": "javaee_jaxrs",
        "createdAt": "2015-07-27T05:29:00.731Z",
        "description": "I'll now introduce you to an interesting concept called Content Negotiation, and how different content types can be handled in JAX-RS.",
        "objectId": "e6HnhaTiwN",
        "permalinkName": "Content-Negotiation",
        "slNo": 31,
        "title": "Content Negotiation",
        "unitNumber": 2,
        "updatedAt": "2015-07-27T05:29:49.368Z",
        "youtube": "vP9HU1o3zsE"
    }
] }